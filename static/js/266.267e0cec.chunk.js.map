{"version":3,"file":"static/js/266.267e0cec.chunk.js","mappings":"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","sources":["pages/Home.js","../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js"],"sourcesContent":["import { Container, Typography } from '@mui/material';\n\nexport default function Home() {\n  return (\n    <Container\n      component=\"main\"\n      sx={{\n        minHeight: 'calc(100vh - 48px)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        background:\n          'linear-gradient(90deg, rgba(21,101,192,1) 33%, rgba(25,118,210,1) 66%, rgba(66,165,245,1) 100%)',\n      }}\n    >\n      <Typography\n        component=\"h1\"\n        variant=\"h2\"\n        sx={{\n          color: 'white',\n          fontWeight: 700,\n          fontSize: { xs: 48, sm: 72, md: 96, lg: 128 },\n        }}\n      >\n        Phonebook\n      </Typography>\n    </Container>\n  );\n}\n","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant === 'inherit' && {\n  // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n  font: 'inherit'\n}, ownerState.variant !== 'inherit' && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;"],"names":["Home","_jsx","Container","component","sx","minHeight","display","justifyContent","alignItems","background","children","Typography","variant","color","fontWeight","fontSize","xs","sm","md","lg","createStyled","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","overridesResolver","props","styles","ownerState","root","concat","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","useUtilityClasses","componentName","classes","slots","composeClasses","generateUtilityClass","options","arguments","length","undefined","_options$createStyled","createStyledComponent","_options$useThemeProp","useThemeProps","_options$componentNam","ContainerRoot","_ref","theme","_extends","width","marginLeft","boxSizing","marginRight","_defineProperty","paddingLeft","spacing","paddingRight","breakpoints","up","_ref3","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","_ref4","Math","max","React","ref","className","_props$component","_props$disableGutters","_props$fixed","_props$maxWidth","other","_objectWithoutPropertiesLoose","as","clsx","createContainer","styled","getTypographyUtilityClass","generateUtilityClasses","TypographyRoot","align","noWrap","gutterBottom","paragraph","margin","font","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","themeProps","transformDeprecatedColors","extendSxProp","_props$align","_props$gutterBottom","_props$noWrap","_props$paragraph","_props$variant","_props$variantMapping","variantMapping","Component"],"sourceRoot":""}